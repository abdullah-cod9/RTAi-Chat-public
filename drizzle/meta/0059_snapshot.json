{
  "id": "bc7c7108-6880-4a77-9140-349ca7ea8977",
  "prevId": "a9182574-ef1b-4854-91bf-163152d16b47",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.accounts": {
      "name": "accounts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "public_id": {
          "name": "public_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_name": {
          "name": "user_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'anonymous'"
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'https://api.rtai.chat/storage/v1/object/public/Public_assets/images/ai-platform-svgrepo-com.png'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "last_sign_in_at": {
          "name": "last_sign_in_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "accounts_id_users_id_fk": {
          "name": "accounts_id_users_id_fk",
          "tableFrom": "accounts",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "accounts_public_id_unique": {
          "name": "accounts_public_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "public_id"
          ]
        },
        "accounts_email_unique": {
          "name": "accounts_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {
        "Enable insert for users based on userId": {
          "name": "Enable insert for users based on userId",
          "as": "RESTRICTIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = accounts.id"
        },
        "Enable update for users based on userId": {
          "name": "Enable update for users based on userId",
          "as": "RESTRICTIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = id",
          "withCheck": "(select auth.uid()) = accounts.id"
        },
        "Enable delete for users based on userId": {
          "name": "Enable delete for users based on userId",
          "as": "RESTRICTIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = accounts.id"
        },
        "Enable select for users based on userId": {
          "name": "Enable select for users based on userId",
          "as": "RESTRICTIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = accounts.id"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.attachments": {
      "name": "attachments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "message_id": {
          "name": "message_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "chat_id": {
          "name": "chat_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "file_name": {
          "name": "file_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_path": {
          "name": "file_path",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_size": {
          "name": "file_size",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "file_type": {
          "name": "file_type",
          "type": "file_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "is_for_rag": {
          "name": "is_for_rag",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "attachments_message_id_messages_id_fk": {
          "name": "attachments_message_id_messages_id_fk",
          "tableFrom": "attachments",
          "tableTo": "messages",
          "columnsFrom": [
            "message_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "attachments_chat_id_chats_id_fk": {
          "name": "attachments_chat_id_chats_id_fk",
          "tableFrom": "attachments",
          "tableTo": "chats",
          "columnsFrom": [
            "chat_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "attachments_created_by_accounts_id_fk": {
          "name": "attachments_created_by_accounts_id_fk",
          "tableFrom": "attachments",
          "tableTo": "accounts",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable insert for users based on userId": {
          "name": "Enable insert for users based on userId",
          "as": "RESTRICTIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = attachments.created_by"
        },
        "Enable update for users based on userId": {
          "name": "Enable update for users based on userId",
          "as": "RESTRICTIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = id",
          "withCheck": "(select auth.uid()) = attachments.created_by"
        },
        "Enable delete for users based on userId": {
          "name": "Enable delete for users based on userId",
          "as": "RESTRICTIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = attachments.created_by"
        },
        "Enable select for users based on userId": {
          "name": "Enable select for users based on userId",
          "as": "RESTRICTIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = attachments.created_by"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_folders": {
      "name": "chat_folders",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "chat_id": {
          "name": "chat_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "folder_id": {
          "name": "folder_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "added_by": {
          "name": "added_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "added_at": {
          "name": "added_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "chat_folders_chat_id_chats_id_fk": {
          "name": "chat_folders_chat_id_chats_id_fk",
          "tableFrom": "chat_folders",
          "tableTo": "chats",
          "columnsFrom": [
            "chat_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "chat_folders_folder_id_folder_id_fk": {
          "name": "chat_folders_folder_id_folder_id_fk",
          "tableFrom": "chat_folders",
          "tableTo": "folder",
          "columnsFrom": [
            "folder_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "chat_folders_added_by_accounts_id_fk": {
          "name": "chat_folders_added_by_accounts_id_fk",
          "tableFrom": "chat_folders",
          "tableTo": "accounts",
          "columnsFrom": [
            "added_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable insert for users based on userId": {
          "name": "Enable insert for users based on userId",
          "as": "RESTRICTIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = chat_folders.added_by"
        },
        "Enable update for users based on userId": {
          "name": "Enable update for users based on userId",
          "as": "RESTRICTIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = chat_folders.added_by"
        },
        "Enable delete for users based on userId": {
          "name": "Enable delete for users based on userId",
          "as": "RESTRICTIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = chat_folders.added_by"
        },
        "Enable select for users based on userId": {
          "name": "Enable select for users based on userId",
          "as": "RESTRICTIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = chat_folders.added_by"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chats": {
      "name": "chats",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "chat_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'private'"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "chats_created_by_accounts_id_fk": {
          "name": "chats_created_by_accounts_id_fk",
          "tableFrom": "chats",
          "tableTo": "accounts",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable insert for users based on userId": {
          "name": "Enable insert for users based on userId",
          "as": "RESTRICTIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = chats.created_by"
        },
        "Enable update for users based on userId": {
          "name": "Enable update for users based on userId",
          "as": "RESTRICTIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = chats.created_by"
        },
        "Enable delete for users based on userId": {
          "name": "Enable delete for users based on userId",
          "as": "RESTRICTIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = chats.created_by"
        },
        "Enable select for users based on userId": {
          "name": "Enable select for users based on userId",
          "as": "RESTRICTIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = chats.created_by"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.embedding_doc": {
      "name": "embedding_doc",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "attachments_id": {
          "name": "attachments_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(1536)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "attachments_id_idx": {
          "name": "attachments_id_idx",
          "columns": [
            {
              "expression": "attachments_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "embeddingIndex": {
          "name": "embeddingIndex",
          "columns": [
            {
              "expression": "embedding",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "vector_cosine_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hnsw",
          "with": {}
        }
      },
      "foreignKeys": {
        "embedding_doc_attachments_id_attachments_id_fk": {
          "name": "embedding_doc_attachments_id_attachments_id_fk",
          "tableFrom": "embedding_doc",
          "tableTo": "attachments",
          "columnsFrom": [
            "attachments_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable insert for users based on attachment ownership": {
          "name": "Enable insert for users based on attachment ownership",
          "as": "RESTRICTIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\n        EXISTS (\n          SELECT 1\n          FROM attachments\n          WHERE attachments.id = embedding_doc.attachments_id\n          AND attachments.created_by = (SELECT auth.uid())\n        )\n      "
        },
        "Enable select for users based on attachment ownership": {
          "name": "Enable select for users based on attachment ownership",
          "as": "RESTRICTIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\n        EXISTS (\n          SELECT 1\n          FROM attachments\n          WHERE attachments.id = embedding_doc.attachments_id\n          AND attachments.created_by = (SELECT auth.uid())\n        )\n      "
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.folder": {
      "name": "folder",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "folder_created_by_accounts_id_fk": {
          "name": "folder_created_by_accounts_id_fk",
          "tableFrom": "folder",
          "tableTo": "accounts",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable insert for users based on userId": {
          "name": "Enable insert for users based on userId",
          "as": "RESTRICTIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = folder.created_by"
        },
        "Enable update for users based on userId": {
          "name": "Enable update for users based on userId",
          "as": "RESTRICTIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = id",
          "withCheck": "(select auth.uid()) = folder.created_by"
        },
        "Enable delete for users based on userId": {
          "name": "Enable delete for users based on userId",
          "as": "RESTRICTIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = folder.created_by"
        },
        "Enable select for users based on userId": {
          "name": "Enable select for users based on userId",
          "as": "RESTRICTIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = folder.created_by"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_group": {
      "name": "chat_group",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "chat_id": {
          "name": "chat_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "group_chat_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "chat_group_chat_id_chats_id_fk": {
          "name": "chat_group_chat_id_chats_id_fk",
          "tableFrom": "chat_group",
          "tableTo": "chats",
          "columnsFrom": [
            "chat_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "chat_group_created_by_accounts_public_id_fk": {
          "name": "chat_group_created_by_accounts_public_id_fk",
          "tableFrom": "chat_group",
          "tableTo": "accounts",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "public_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable insert for users based on userId": {
          "name": "Enable insert for users based on userId",
          "as": "RESTRICTIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\n      EXISTS (\n        SELECT 1\n        FROM chats\n        WHERE chats.id = chat_group.chat_id\n        AND chats.created_by = (SELECT auth.uid())\n      )\n    "
        },
        "Enable update for users based on userId": {
          "name": "Enable update for users based on userId",
          "as": "RESTRICTIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "withCheck": "\n      EXISTS (\n        SELECT 1\n        FROM chats\n        WHERE chats.id = chat_group.chat_id\n        AND chats.created_by = (SELECT auth.uid())\n      )\n    "
        },
        "Enable delete for users based on userId": {
          "name": "Enable delete for users based on userId",
          "as": "RESTRICTIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "\n      EXISTS (\n        SELECT 1\n        FROM chats\n        WHERE chats.id = chat_group.chat_id\n        AND chats.created_by = (SELECT auth.uid())\n      )\n    "
        },
        "Enable select for users based on userId": {
          "name": "Enable select for users based on userId",
          "as": "RESTRICTIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\n      EXISTS (\n        SELECT 1\n        FROM chats\n        WHERE chats.id = chat_group.chat_id\n        AND chats.created_by = (SELECT auth.uid())\n      )\n    "
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.messages": {
      "name": "messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "chat_id": {
          "name": "chat_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "parent_message_id": {
          "name": "parent_message_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "parts": {
          "name": "parts",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "model": {
          "name": "model",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "role": {
          "name": "role",
          "type": "messages_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "chat_id_idx": {
          "name": "chat_id_idx",
          "columns": [
            {
              "expression": "chat_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_id_idx": {
          "name": "user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "messages_chat_id_chats_id_fk": {
          "name": "messages_chat_id_chats_id_fk",
          "tableFrom": "messages",
          "tableTo": "chats",
          "columnsFrom": [
            "chat_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "messages_user_id_accounts_id_fk": {
          "name": "messages_user_id_accounts_id_fk",
          "tableFrom": "messages",
          "tableTo": "accounts",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "messages_parent_message_id_messages_id_fk": {
          "name": "messages_parent_message_id_messages_id_fk",
          "tableFrom": "messages",
          "tableTo": "messages",
          "columnsFrom": [
            "parent_message_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable insert for users based on userId": {
          "name": "Enable insert for users based on userId",
          "as": "RESTRICTIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = messages.user_id"
        },
        "Enable select for users based on userId": {
          "name": "Enable select for users based on userId",
          "as": "RESTRICTIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = messages.user_id"
        },
        "Enable delete for users based on userId": {
          "name": "Enable delete for users based on userId",
          "as": "RESTRICTIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = messages.user_id"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.subscribers": {
      "name": "subscribers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "credits": {
          "name": "credits",
          "type": "numeric(12, 8)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.1500'"
        },
        "subscription_type": {
          "name": "subscription_type",
          "type": "subscription_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'free'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "subscribers_user_id_users_id_fk": {
          "name": "subscribers_user_id_users_id_fk",
          "tableFrom": "subscribers",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable insert for users matching userId": {
          "name": "Enable insert for users matching userId",
          "as": "RESTRICTIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "subscribers.user_id = (SELECT auth.uid())"
        },
        "Enable select for users matching userId": {
          "name": "Enable select for users matching userId",
          "as": "RESTRICTIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "subscribers.user_id = (SELECT auth.uid())"
        },
        "Enable update for users matching userId": {
          "name": "Enable update for users matching userId",
          "as": "RESTRICTIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "subscribers.user_id = (SELECT auth.uid())",
          "withCheck": "subscribers.user_id = (SELECT auth.uid())"
        },
        "Enable delete for users matching userId": {
          "name": "Enable delete for users matching userId",
          "as": "RESTRICTIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "subscribers.user_id = (SELECT auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.file_enum": {
      "name": "file_enum",
      "schema": "public",
      "values": [
        "pdf",
        "docx",
        "pptx",
        "xlsx",
        "txt",
        "gif",
        "jpeg",
        "png",
        "webp",
        "jpg"
      ]
    },
    "public.subscription_enum": {
      "name": "subscription_enum",
      "schema": "public",
      "values": [
        "free",
        "plus",
        "pro",
        "enterprise"
      ]
    },
    "public.chat_type": {
      "name": "chat_type",
      "schema": "public",
      "values": [
        "private",
        "public"
      ]
    },
    "public.group_chat_role": {
      "name": "group_chat_role",
      "schema": "public",
      "values": [
        "admin",
        "user"
      ]
    },
    "public.messages_role": {
      "name": "messages_role",
      "schema": "public",
      "values": [
        "system",
        "user",
        "assistant"
      ]
    },
    "public.models_enum": {
      "name": "models_enum",
      "schema": "public",
      "values": [
        "gpt-4o",
        "gpt-4o-mini",
        "o3-mini"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}